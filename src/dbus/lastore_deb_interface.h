/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.deepin.AppStore.Backend.Deb.xml -p lastore_deb_interface -i dbus/dbus_variant/app_version.h -i dbus/dbus_variant/installed_app_info.h -i dbus/dbus_variant/installed_app_timestamp.h -c LastoreDebInterface
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef LASTORE_DEB_INTERFACE_H
#define LASTORE_DEB_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "dbus/dbus_variant/app_version.h"
#include "dbus/dbus_variant/installed_app_info.h"
#include "dbus/dbus_variant/installed_app_timestamp.h"

/*
 * Proxy class for interface com.deepin.AppStore.Backend
 */
class LastoreDebInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.deepin.AppStore.Backend"; }

public:
    LastoreDebInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~LastoreDebInterface();

    Q_PROPERTY(QList<QDBusObjectPath> JobList READ jobList)
    inline QList<QDBusObjectPath> jobList() const
    { return qvariant_cast< QList<QDBusObjectPath> >(property("JobList")); }

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<QDBusObjectPath> Install(const QString &jobName, const QString &id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(jobName) << QVariant::fromValue(id);
        return asyncCallWithArgumentList(QStringLiteral("Install"), argumentList);
    }

    inline QDBusPendingReply<InstalledAppInfoList> ListInstalled()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("ListInstalled"), argumentList);
    }

    inline QDBusPendingReply<qlonglong> QueryDownloadSize(const QString &id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(id);
        return asyncCallWithArgumentList(QStringLiteral("QueryDownloadSize"), argumentList);
    }

    inline QDBusPendingReply<InstalledAppTimestamp> QueryInstallationTime(const QStringList &idList)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(idList);
        return asyncCallWithArgumentList(QStringLiteral("QueryInstallationTime"), argumentList);
    }

    inline QDBusPendingReply<AppVersionList> QueryVersion(const QStringList &idList)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(idList);
        return asyncCallWithArgumentList(QStringLiteral("QueryVersion"), argumentList);
    }

    inline QDBusPendingReply<QDBusObjectPath> Remove(const QString &jobName, const QString &id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(jobName) << QVariant::fromValue(id);
        return asyncCallWithArgumentList(QStringLiteral("Remove"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

#endif
